include "oraft_proto_types.proto"

type actual_append_result =
    Append_success index | Append_failure index
    options "ocaml.type_equals" = "Oraft.Types.actual_append_result"

type ping_msg = { term : term; n : long }

type entry = Nop | Op (req_id * string) | Config config

message raft_message =
    Request_vote { term : term; candidate_id : rep_id;
                   last_log_index : index; last_log_term : term }
  | Vote_result { term : term; vote_granted : bool }
  | Append_entries { term : term; leader_id : rep_id;
                     prev_log_index : index; prev_log_term : term;
                     entries : [ (index * entry * term) ];
                     leader_commit : index }
  | Append_result { term : term; result : actual_append_result }
  | Ping ping_msg
  | Pong ping_msg

(* vim: set ft=omlet: *)
